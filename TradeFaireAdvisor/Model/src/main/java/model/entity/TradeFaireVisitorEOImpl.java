package model.entity;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import model.domainModels.VisitorCollectionOfAppointmentsWithExhibitor;
import model.domainModels.VisitorCollectionOfInterestedPersons;
import model.domainModels.VisitorCollectionOfNotesForExhibitors;

import model.domainModels.VisitorCollectionOfPrivateMeetupsWithExhibitors;
import model.domainModels.VisitorCollectionOfPublicExhibitorEvents;

import model.domainModels.VisitorCollectionOfRequestMoreInformationFromExhibitors;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Array;
import oracle.jbo.domain.Date;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.ProgrammaticEntityImpl;
import oracle.jbo.server.SparseArray;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Wed Oct 09 23:09:43 CEST 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TradeFaireVisitorEOImpl extends ProgrammaticEntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    protected enum AttributesEnum {
        VisitorId,
        VisitorFirstName,
        VisitorLastName,
        VisitorRegistrationToTradeFair,
        VisitorEmail,
        VisitorRequestNotificationForFutureTradeFair,
        VisitorAmountOfExhibitorsToBeVisited,
        VisitorAmountOfExhibitorsToBeVisitedForPrivateMeetup,
        VisitorAmountOfExhibitorsToBeVisitedForPublicEvent,
        VisitorAppointmentsDuringWholeTradeFaire,
        VisitorPrivateAppointmentsDuringWholeTradeFaire,
        VisitorPublicEventsAppointmentsDuringWholeTradeFaire,
        VisitorNotesForExhibitors,
        VisitorNewContacts,
        VisitorBreakesList,
        VisitorRequestsMoreInformationFromExhibitors,
        VisitorMainInterestsForTradeFaireExhibitors,
        VisitorPriotorizedMainInterests,
        VisitorSpecificMoreOptionalInterests;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        protected int index() {
            return TradeFaireVisitorEOImpl.AttributesEnum.firstIndex() + ordinal();
        }

        protected static final int firstIndex() {
            return firstIndex;
        }

        protected static int count() {
            return TradeFaireVisitorEOImpl.AttributesEnum.firstIndex() + TradeFaireVisitorEOImpl.AttributesEnum
                                                                                                .staticValues().length;
        }

        protected static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = TradeFaireVisitorEOImpl.AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int VISITORID = AttributesEnum.VisitorId.index();
    public static final int VISITORFIRSTNAME = AttributesEnum.VisitorFirstName.index();
    public static final int VISITORLASTNAME = AttributesEnum.VisitorLastName.index();
    public static final int VISITORREGISTRATIONTOTRADEFAIR = AttributesEnum.VisitorRegistrationToTradeFair.index();
    public static final int VISITOREMAIL = AttributesEnum.VisitorEmail.index();
    public static final int VISITORREQUESTNOTIFICATIONFORFUTURETRADEFAIR =
        AttributesEnum.VisitorRequestNotificationForFutureTradeFair.index();
    public static final int VISITORAMOUNTOFEXHIBITORSTOBEVISITED =
        AttributesEnum.VisitorAmountOfExhibitorsToBeVisited.index();
    public static final int VISITORAMOUNTOFEXHIBITORSTOBEVISITEDFORPRIVATEMEETUP =
        AttributesEnum.VisitorAmountOfExhibitorsToBeVisitedForPrivateMeetup.index();
    public static final int VISITORAMOUNTOFEXHIBITORSTOBEVISITEDFORPUBLICEVENT =
        AttributesEnum.VisitorAmountOfExhibitorsToBeVisitedForPublicEvent.index();
    public static final int VISITORAPPOINTMENTSDURINGWHOLETRADEFAIRE =
        AttributesEnum.VisitorAppointmentsDuringWholeTradeFaire.index();
    public static final int VISITORPRIVATEAPPOINTMENTSDURINGWHOLETRADEFAIRE =
        AttributesEnum.VisitorPrivateAppointmentsDuringWholeTradeFaire.index();
    public static final int VISITORPUBLICEVENTSAPPOINTMENTSDURINGWHOLETRADEFAIRE =
        AttributesEnum.VisitorPublicEventsAppointmentsDuringWholeTradeFaire.index();
    public static final int VISITORNOTESFOREXHIBITORS = AttributesEnum.VisitorNotesForExhibitors.index();
    public static final int VISITORNEWCONTACTS = AttributesEnum.VisitorNewContacts.index();
    public static final int VISITORBREAKESLIST = AttributesEnum.VisitorBreakesList.index();
    public static final int VISITORREQUESTSMOREINFORMATIONFROMEXHIBITORS =
        AttributesEnum.VisitorRequestsMoreInformationFromExhibitors.index();
    public static final int VISITORMAININTERESTSFORTRADEFAIREEXHIBITORS =
        AttributesEnum.VisitorMainInterestsForTradeFaireExhibitors.index();
    public static final int VISITORPRIOTORIZEDMAININTERESTS = AttributesEnum.VisitorPriotorizedMainInterests.index();
    public static final int VISITORSPECIFICMOREOPTIONALINTERESTS =
        AttributesEnum.VisitorSpecificMoreOptionalInterests.index();

    /**
     * This is the default constructor (do not remove).
     */
    public TradeFaireVisitorEOImpl() {
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("model.entity.TradeFaireVisitorEO");
    }


    /**
     * Gets the attribute value for VisitorId, using the alias name VisitorId.
     * @return the value of VisitorId
     */
    public Integer getVisitorId() {
        return (Integer) getAttributeInternal(VISITORID);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorId.
     * @param value value to set the VisitorId
     */
    public void setVisitorId(Integer value) {
        setAttributeInternal(VISITORID, value);
    }

    /**
     * Gets the attribute value for VisitorFirstName, using the alias name VisitorFirstName.
     * @return the value of VisitorFirstName
     */
    public String getVisitorFirstName() {
        return (String) getAttributeInternal(VISITORFIRSTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorFirstName.
     * @param value value to set the VisitorFirstName
     */
    public void setVisitorFirstName(String value) {
        setAttributeInternal(VISITORFIRSTNAME, value);
    }

    /**
     * Gets the attribute value for VisitorLastName, using the alias name VisitorLastName.
     * @return the value of VisitorLastName
     */
    public String getVisitorLastName() {
        return (String) getAttributeInternal(VISITORLASTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorLastName.
     * @param value value to set the VisitorLastName
     */
    public void setVisitorLastName(String value) {
        setAttributeInternal(VISITORLASTNAME, value);
    }

    /**
     * Gets the attribute value for VisitorRegistrationToTradeFair, using the alias name VisitorRegistrationToTradeFair.
     * @return the value of VisitorRegistrationToTradeFair
     */
    public Date getVisitorRegistrationToTradeFair() {
        return (Date) getAttributeInternal(VISITORREGISTRATIONTOTRADEFAIR);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorRegistrationToTradeFair.
     * @param value value to set the VisitorRegistrationToTradeFair
     */
    public void setVisitorRegistrationToTradeFair(Date value) {
        setAttributeInternal(VISITORREGISTRATIONTOTRADEFAIR, value);
    }

    /**
     * Gets the attribute value for VisitorEmail, using the alias name VisitorEmail.
     * @return the value of VisitorEmail
     */
    public String getVisitorEmail() {
        return (String) getAttributeInternal(VISITOREMAIL);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorEmail.
     * @param value value to set the VisitorEmail
     */
    public void setVisitorEmail(String value) {
        setAttributeInternal(VISITOREMAIL, value);
    }

    /**
     * Gets the attribute value for VisitorRequestNotificationForFutureTradeFair, using the alias name VisitorRequestNotificationForFutureTradeFair.
     * @return the value of VisitorRequestNotificationForFutureTradeFair
     */
    public Boolean getVisitorRequestNotificationForFutureTradeFair() {
        return (Boolean) getAttributeInternal(VISITORREQUESTNOTIFICATIONFORFUTURETRADEFAIR);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorRequestNotificationForFutureTradeFair.
     * @param value value to set the VisitorRequestNotificationForFutureTradeFair
     */
    public void setVisitorRequestNotificationForFutureTradeFair(Boolean value) {
        setAttributeInternal(VISITORREQUESTNOTIFICATIONFORFUTURETRADEFAIR, value);
    }

    /**
     * Gets the attribute value for VisitorAmountOfExhibitorsToBeVisited, using the alias name VisitorAmountOfExhibitorsToBeVisited.
     * @return the value of VisitorAmountOfExhibitorsToBeVisited
     */
    public Integer getVisitorAmountOfExhibitorsToBeVisited() {
        return (Integer) getAttributeInternal(VISITORAMOUNTOFEXHIBITORSTOBEVISITED);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorAmountOfExhibitorsToBeVisited.
     * @param value value to set the VisitorAmountOfExhibitorsToBeVisited
     */
    public void setVisitorAmountOfExhibitorsToBeVisited(Integer value) {
        setAttributeInternal(VISITORAMOUNTOFEXHIBITORSTOBEVISITED, value);
    }

    /**
     * Gets the attribute value for VisitorAmountOfExhibitorsToBeVisitedForPrivateMeetup, using the alias name VisitorAmountOfExhibitorsToBeVisitedForPrivateMeetup.
     * @return the value of VisitorAmountOfExhibitorsToBeVisitedForPrivateMeetup
     */
    public Integer getVisitorAmountOfExhibitorsToBeVisitedForPrivateMeetup() {
        return (Integer) getAttributeInternal(VISITORAMOUNTOFEXHIBITORSTOBEVISITEDFORPRIVATEMEETUP);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorAmountOfExhibitorsToBeVisitedForPrivateMeetup.
     * @param value value to set the VisitorAmountOfExhibitorsToBeVisitedForPrivateMeetup
     */
    public void setVisitorAmountOfExhibitorsToBeVisitedForPrivateMeetup(Integer value) {
        setAttributeInternal(VISITORAMOUNTOFEXHIBITORSTOBEVISITEDFORPRIVATEMEETUP, value);
    }

    /**
     * Gets the attribute value for VisitorAmountOfExhibitorsToBeVisitedForPublicEvent, using the alias name VisitorAmountOfExhibitorsToBeVisitedForPublicEvent.
     * @return the value of VisitorAmountOfExhibitorsToBeVisitedForPublicEvent
     */
    public Integer getVisitorAmountOfExhibitorsToBeVisitedForPublicEvent() {
        return (Integer) getAttributeInternal(VISITORAMOUNTOFEXHIBITORSTOBEVISITEDFORPUBLICEVENT);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorAmountOfExhibitorsToBeVisitedForPublicEvent.
     * @param value value to set the VisitorAmountOfExhibitorsToBeVisitedForPublicEvent
     */
    public void setVisitorAmountOfExhibitorsToBeVisitedForPublicEvent(Integer value) {
        setAttributeInternal(VISITORAMOUNTOFEXHIBITORSTOBEVISITEDFORPUBLICEVENT, value);
    }

    /**
     * Gets the attribute value for VisitorAppointmentsDuringWholeTradeFaire, using the alias name VisitorAppointmentsDuringWholeTradeFaire.
     * @return the value of VisitorAppointmentsDuringWholeTradeFaire
     */
    public VisitorCollectionOfAppointmentsWithExhibitor getVisitorAppointmentsDuringWholeTradeFaire() {
        return (VisitorCollectionOfAppointmentsWithExhibitor) getAttributeInternal(VISITORAPPOINTMENTSDURINGWHOLETRADEFAIRE);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorAppointmentsDuringWholeTradeFaire.
     * @param value value to set the VisitorAppointmentsDuringWholeTradeFaire
     */
    public void setVisitorAppointmentsDuringWholeTradeFaire(VisitorCollectionOfAppointmentsWithExhibitor value) {
        setAttributeInternal(VISITORAPPOINTMENTSDURINGWHOLETRADEFAIRE, value);
    }

    /**
     * Gets the attribute value for VisitorPrivateAppointmentsDuringWholeTradeFaire, using the alias name VisitorPrivateAppointmentsDuringWholeTradeFaire.
     * @return the value of VisitorPrivateAppointmentsDuringWholeTradeFaire
     */
    public VisitorCollectionOfPrivateMeetupsWithExhibitors getVisitorPrivateAppointmentsDuringWholeTradeFaire() {
        return (VisitorCollectionOfPrivateMeetupsWithExhibitors) getAttributeInternal(VISITORPRIVATEAPPOINTMENTSDURINGWHOLETRADEFAIRE);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorPrivateAppointmentsDuringWholeTradeFaire.
     * @param value value to set the VisitorPrivateAppointmentsDuringWholeTradeFaire
     */
    public void setVisitorPrivateAppointmentsDuringWholeTradeFaire(VisitorCollectionOfPrivateMeetupsWithExhibitors value) {
        setAttributeInternal(VISITORPRIVATEAPPOINTMENTSDURINGWHOLETRADEFAIRE, value);
    }

    /**
     * Gets the attribute value for VisitorPublicEventsAppointmentsDuringWholeTradeFaire, using the alias name VisitorPublicEventsAppointmentsDuringWholeTradeFaire.
     * @return the value of VisitorPublicEventsAppointmentsDuringWholeTradeFaire
     */
    public VisitorCollectionOfPublicExhibitorEvents getVisitorPublicEventsAppointmentsDuringWholeTradeFaire() {
        return (VisitorCollectionOfPublicExhibitorEvents) getAttributeInternal(VISITORPUBLICEVENTSAPPOINTMENTSDURINGWHOLETRADEFAIRE);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorPublicEventsAppointmentsDuringWholeTradeFaire.
     * @param value value to set the VisitorPublicEventsAppointmentsDuringWholeTradeFaire
     */
    public void setVisitorPublicEventsAppointmentsDuringWholeTradeFaire(VisitorCollectionOfPublicExhibitorEvents value) {
        setAttributeInternal(VISITORPUBLICEVENTSAPPOINTMENTSDURINGWHOLETRADEFAIRE, value);
    }

    /**
     * Gets the attribute value for VisitorNotesForExhibitors, using the alias name VisitorNotesForExhibitors.
     * @return the value of VisitorNotesForExhibitors
     */
    public VisitorCollectionOfNotesForExhibitors getVisitorNotesForExhibitors() {
        return (VisitorCollectionOfNotesForExhibitors) getAttributeInternal(VISITORNOTESFOREXHIBITORS);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorNotesForExhibitors.
     * @param value value to set the VisitorNotesForExhibitors
     */
    public void setVisitorNotesForExhibitors(VisitorCollectionOfNotesForExhibitors value) {
        setAttributeInternal(VISITORNOTESFOREXHIBITORS, value);
    }

    /**
     * Gets the attribute value for VisitorNewContacts, using the alias name VisitorNewContacts.
     * @return the value of VisitorNewContacts
     */
    public VisitorCollectionOfInterestedPersons getVisitorNewContacts() {
        return (VisitorCollectionOfInterestedPersons) getAttributeInternal(VISITORNEWCONTACTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorNewContacts.
     * @param value value to set the VisitorNewContacts
     */
    public void setVisitorNewContacts(VisitorCollectionOfInterestedPersons value) {
        setAttributeInternal(VISITORNEWCONTACTS, value);
    }

    /**
     * Gets the attribute value for VisitorBreakesList, using the alias name VisitorBreakesList.
     * @return the value of VisitorBreakesList
     */
    public Array getVisitorBreakesList() {
        return (Array) getAttributeInternal(VISITORBREAKESLIST);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorBreakesList.
     * @param value value to set the VisitorBreakesList
     */
    public void setVisitorBreakesList(Array value) {
        setAttributeInternal(VISITORBREAKESLIST, value);
    }

    /**
     * Gets the attribute value for VisitorRequestsMoreInformationFromExhibitors, using the alias name VisitorRequestsMoreInformationFromExhibitors.
     * @return the value of VisitorRequestsMoreInformationFromExhibitors
     */
    public VisitorCollectionOfRequestMoreInformationFromExhibitors getVisitorRequestsMoreInformationFromExhibitors() {
        return (VisitorCollectionOfRequestMoreInformationFromExhibitors) getAttributeInternal(VISITORREQUESTSMOREINFORMATIONFROMEXHIBITORS);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorRequestsMoreInformationFromExhibitors.
     * @param value value to set the VisitorRequestsMoreInformationFromExhibitors
     */
    public void setVisitorRequestsMoreInformationFromExhibitors(VisitorCollectionOfRequestMoreInformationFromExhibitors value) {
        setAttributeInternal(VISITORREQUESTSMOREINFORMATIONFROMEXHIBITORS, value);
    }

    /**
     * Gets the attribute value for VisitorMainInterestsForTradeFaireExhibitors, using the alias name VisitorMainInterestsForTradeFaireExhibitors.
     * @return the value of VisitorMainInterestsForTradeFaireExhibitors
     */
    public Array getVisitorMainInterestsForTradeFaireExhibitors() {
        return (Array) getAttributeInternal(VISITORMAININTERESTSFORTRADEFAIREEXHIBITORS);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorMainInterestsForTradeFaireExhibitors.
     * @param value value to set the VisitorMainInterestsForTradeFaireExhibitors
     */
    public void setVisitorMainInterestsForTradeFaireExhibitors(Array value) {
        setAttributeInternal(VISITORMAININTERESTSFORTRADEFAIREEXHIBITORS, value);
    }

    /**
     * Gets the attribute value for VisitorPriotorizedMainInterests, using the alias name VisitorPriotorizedMainInterests.
     * @return the value of VisitorPriotorizedMainInterests
     */
    public Array getVisitorPriotorizedMainInterests() {
        return (Array) getAttributeInternal(VISITORPRIOTORIZEDMAININTERESTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorPriotorizedMainInterests.
     * @param value value to set the VisitorPriotorizedMainInterests
     */
    public void setVisitorPriotorizedMainInterests(Array value) {
        setAttributeInternal(VISITORPRIOTORIZEDMAININTERESTS, value);
    }

    /**
     * Gets the attribute value for VisitorSpecificMoreOptionalInterests, using the alias name VisitorSpecificMoreOptionalInterests.
     * @return the value of VisitorSpecificMoreOptionalInterests
     */
    public Array getVisitorSpecificMoreOptionalInterests() {
        return (Array) getAttributeInternal(VISITORSPECIFICMOREOPTIONALINTERESTS);
    }

    /**
     * Sets <code>value</code> as the attribute value for VisitorSpecificMoreOptionalInterests.
     * @param value value to set the VisitorSpecificMoreOptionalInterests
     */
    public void setVisitorSpecificMoreOptionalInterests(Array value) {
        setAttributeInternal(VISITORSPECIFICMOREOPTIONALINTERESTS, value);
    }

    /**
     * @param visitorId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer visitorId) {
        return new Key(new Object[] { visitorId });
    }

    /**
     * postDataProvider - for custom java data source support.
     */
    @Override
    protected HashMap<String, Object> postDataProvider(int operationType, ArrayList retAttrNames) {
        switch (operationType) {
        case EntityImpl.DML_INSERT:
            System.out.println("Insert entity data into custom data sink.");
            return null;
        case EntityImpl.DML_UPDATE:
            System.out.println("Update modified entity data into custom data sink.");
            return null;
        case EntityImpl.DML_DELETE:
            System.out.println("Delete entity from custom data sink.");
            return null;
        }
        return null;
    }

    /**
     * getRowFromDataSource - for custom java data source support.
     */
    @Override
    protected List<SparseArray> getRowFromDataSource(HashMap<String, Object> origPrimaryKeyMap) {
        return null;
    }

    /**
     * lockDataProvider - for custom java data source support.
     */
    @Override
    protected void lockDataProvider(boolean lock) {
        super.lockDataProvider(lock);
    }

    /**
     * rollbackDataProvider - for custom java data source support.
     */
    @Override
    public void rollbackDataProvider() {
        super.rollbackDataProvider();
    }

    /**
     * commitDataProvider - for custom java data source support.
     */
    @Override
    public void commitDataProvider(ProgrammaticEntityImpl.CommitActionType commitActionType) {
        super.commitDataProvider(commitActionType);
    }


    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}

